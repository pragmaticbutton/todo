// Package restapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package restapi

import (
	"time"
)

// Defines values for TaskPriority.
const (
	HIGH   TaskPriority = "HIGH"
	LOW    TaskPriority = "LOW"
	MEDIUM TaskPriority = "MEDIUM"
)

// CategoryOut Response type for category related services.
type CategoryOut struct {
	// Created Point in time when this category was created.
	Created time.Time `json:"created"`

	// Description Category description.
	Description *string `json:"description,omitempty"`

	// Id Id of category.
	Id int32 `json:"id"`

	// LastChanged Point in time when this category was last modified.
	LastChanged time.Time `json:"last_changed"`

	// Name Category name.
	Name string `json:"name"`
}

// CreateCategoryIn Request type for CreateCategory service.
type CreateCategoryIn struct {
	// Description Category description.
	Description *string `json:"description,omitempty"`

	// Name Category name.
	Name string `json:"name"`
}

// CreateTaskIn Request type for CreateTask service.
type CreateTaskIn struct {
	// CategoryId Id of the category this tasks belongs.
	CategoryId int32 `json:"categoryId"`

	// Description Description of the task.
	Description *string `json:"description,omitempty"`

	// Name Task name.
	Name string `json:"name"`

	// Priority Priority of the task.
	Priority TaskPriority `json:"priority"`
}

// SearchCategoryOut Response type for SearchCategory service.
type SearchCategoryOut struct {
	Categories *[]CategoryOut `json:"categories,omitempty"`
}

// SearchTaskOut Response type for SearchTask service.
type SearchTaskOut struct {
	Tasks *[]TaskOut `json:"tasks,omitempty"`
}

// TaskOut Resopnse type for task services.
type TaskOut struct {
	// CategoryId Id of the category this tasks belongs.
	CategoryId int32 `json:"category_id"`

	// Created Point in time when this task was created.
	Created time.Time `json:"created"`

	// Description Description of the task.
	Description *string `json:"description,omitempty"`

	// Done Flag indicating whether the task is finished.
	Done bool `json:"done"`

	// Id Unique identifier of a task.
	Id int32 `json:"id"`

	// LastChanged Point in time when this task was last modified.
	LastChanged time.Time `json:"last_changed"`

	// Name Task name.
	Name string `json:"name"`

	// Priority Priority of the task.
	Priority TaskPriority `json:"priority"`
}

// TaskPriority Priority of the task.
type TaskPriority string

// UpdateCategoryIn Request type for UpdateCategory service.
type UpdateCategoryIn struct {
	// Description Category description.
	Description *string `json:"description,omitempty"`

	// Name Category name.
	Name *string `json:"name,omitempty"`
}

// SearchCategoryParams defines parameters for SearchCategory.
type SearchCategoryParams struct {
	// Name Category name. Supports wildcards (*).
	Name *string `form:"name,omitempty" json:"name,omitempty"`
}

// SearchTaskParams defines parameters for SearchTask.
type SearchTaskParams struct {
	// Name Task name. Supports wildcards (*).
	Name *string `form:"name,omitempty" json:"name,omitempty"`

	// CategoryId Category id.
	CategoryId *int32 `form:"categoryId,omitempty" json:"categoryId,omitempty"`

	// Done Indicator of if the task has been completed.
	Done *bool `form:"done,omitempty" json:"done,omitempty"`

	// Priority Priority of the task.
	Priority *TaskPriority `form:"priority,omitempty" json:"priority,omitempty"`
}

// CreateCategoryJSONRequestBody defines body for CreateCategory for application/json ContentType.
type CreateCategoryJSONRequestBody = CreateCategoryIn

// UpdateCategoryJSONRequestBody defines body for UpdateCategory for application/json ContentType.
type UpdateCategoryJSONRequestBody = UpdateCategoryIn

// CreateTaskJSONRequestBody defines body for CreateTask for application/json ContentType.
type CreateTaskJSONRequestBody = CreateTaskIn
